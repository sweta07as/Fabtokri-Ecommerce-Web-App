{"version":3,"sources":["actions/cartAction.js","actions/deliveryAction.js","component/Cart/CheckoutSteps.js","component/Cart/Shipping.js"],"names":["addItemsToCart","id","quantity","dispatch","getState","a","axios","get","data","type","ADD_TO_CART","payload","product","_id","name","price","image","images","url","stock","localStorage","setItem","JSON","stringify","cart","cartItems","removeItemsFromCart","REMOVE_CART_ITEM","saveShippingInfo","SAVE_SHIPPING_INFO","checkPincode","pincode","CHECK_PINCODE_REQUEST","CHECK_PINCODE_SUCCESS","CHECK_PINCODE_FAIL","response","message","trackShipment","waybill","TRACK_SHIPMENT_REQUEST","TRACK_SHIPMENT_SUCCESS","TRACK_SHIPMENT_FAIL","clearErrors","CLEAR_ERRORS","CheckoutSteps","activeStep","steps","label","icon","alternativeLabel","style","boxSizing","map","item","index","active","completed","color","Shipping","history","useDispatch","alert","useAlert","shippingInfo","useSelector","state","useState","address","setAddress","city","setCity","setState","country","setCountry","pinCode","setPinCode","phoneNo","setPhoneNo","loading","prepaid","serviceability","error","useEffect","CHECK_PINCODE_RESET","title","className","encType","onSubmit","e","preventDefault","length","push","placeholder","required","value","onChange","target","size","Country","getAllCountries","isoCode","State","getStatesOfCountry"],"mappings":"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","file":"static/js/17.f0114d82.chunk.js","sourcesContent":["import {\n  ADD_TO_CART,\n  REMOVE_CART_ITEM,\n  SAVE_SHIPPING_INFO,\n} from \"../constants/cartConstants\";\nimport axios from \"axios\";\n\n//Add to Cart\nexport const addItemsToCart = (id, quantity) => async (dispatch, getState) => {\n  const { data } = await axios.get(`/api/v1/product/${id}`);\n\n  dispatch({\n    type: ADD_TO_CART,\n    payload: {\n      product: data.product._id,\n      name: data.product.name,\n      price: data.product.price,\n      image: data.product.images[0].url,\n      stock: data.product.stock,\n      quantity,\n    },\n  });\n  if (typeof localStorage !== 'undefined') {\n    // Access the localStorage object or execute code that depends on it\n    localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\n  }\n};\n\n//REMOVE FROM CART\nexport const removeItemsFromCart = (id) => async (dispatch, getState) => {\n  dispatch({\n    type: REMOVE_CART_ITEM,\n    payload: id,\n  });\n  if (typeof localStorage !== 'undefined') {\n    // Access the localStorage object or execute code that depends on it\n    localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\n  }\n};\n\n//SAVE SHIIPPING INFO\nexport const saveShippingInfo = (data) => async (dispatch, getState) => {\n  dispatch({\n    type: SAVE_SHIPPING_INFO,\n    payload: data,\n  });\n  if (typeof localStorage !== 'undefined') {\n    // Access the localStorage object or execute code that depends on it\n    localStorage.setItem(\"shippingInfo\", JSON.stringify(data));\n  }\n};\n\n","import axios from 'axios';\n\nimport {\n  CHECK_PINCODE_REQUEST,\n  CHECK_PINCODE_SUCCESS,\n  CHECK_PINCODE_FAIL,\n  TRACK_SHIPMENT_REQUEST,\n  TRACK_SHIPMENT_SUCCESS,\n  TRACK_SHIPMENT_FAIL,\n  CLEAR_ERRORS,\n} from \"../constants/deliveryConstants.js\";\n\nexport const checkPincode = (pincode) => async (dispatch) => {\n  try {\n    dispatch({ type: CHECK_PINCODE_REQUEST });\n\n    // Make an API request to your backend to check the PIN code\n    const { data } = await axios.get(`/api/v1/check-pincode?pinCode=${pincode}`);\n\n    dispatch({\n      type: CHECK_PINCODE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: CHECK_PINCODE_FAIL,\n      payload: error.response ? error.response.data.message : error.message,\n    });\n  }\n};\n\nexport const trackShipment = (waybill) => async (dispatch) => {\n  try {\n    dispatch({ type: TRACK_SHIPMENT_REQUEST });\n\n    // Make an API request to your backend to check the PIN code\n    const { data } = await axios.get(\n      `/api/v1/track-shipment?waybill=${waybill}`\n    );\n\n    dispatch({\n      type: TRACK_SHIPMENT_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: TRACK_SHIPMENT_FAIL,\n      payload: error.response ? error.response.data.message : error.message,\n    });\n  }\n};\n\nexport const clearErrors = () => async (dispatch) => {\n  dispatch({ type: CLEAR_ERRORS });\n};","import React, { Fragment } from \"react\";\nimport { Typography, Stepper, StepLabel, Step } from \"@material-ui/core\";\nimport LocalShippingIcon from \"@material-ui/icons/LocalShipping\";\nimport LibraryAddCheckIcon from \"@material-ui/icons/LibraryAddCheck\";\nimport AccountBalanceIcon from \"@material-ui/icons/AccountBalance\";\nimport \"./CheckoutSteps.css\";\n\nconst CheckoutSteps = ({ activeStep }) => {\n  const steps = [\n    {\n      label: <Typography>Shipping Details</Typography>,\n      icon: <LocalShippingIcon />,\n    },\n    {\n      label: <Typography>Confirm Order</Typography>,\n      icon: <LibraryAddCheckIcon />,\n    },\n    {\n      label: <Typography>Payment</Typography>,\n      icon: <AccountBalanceIcon />,\n    },\n  ];\n\n  const stepStyles = {\n    boxSizing: \"border-box\",\n  };\n\n  return (\n    <Fragment>\n      <Stepper alternativeLabel activeStep={activeStep} style={stepStyles}>\n        {steps.map((item, index) => (\n          <Step\n            key={index}\n            active={activeStep === index ? true : false}\n            completed={activeStep >= index ? true : false}\n          >\n            <StepLabel\n              style={{\n                color:\n                  activeStep >= index\n                    ? \"rgb(128, 0, 57)\"\n                    : \"rgba(0, 0, 0, 0.649)\",\n              }}\n              icon={item.icon}\n            >\n              {item.label}\n            </StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n    </Fragment>\n  );\n};\n\nexport default CheckoutSteps;\n","import React, { Fragment, useState, useEffect } from \"react\";\nimport \"./Shipping.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { saveShippingInfo } from \"../../actions/cartAction\";\nimport MetaData from \"../layout/Metadata\";\nimport PinDropIcon from \"@material-ui/icons/PinDrop\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport LocationCityIcon from \"@material-ui/icons/LocationCity\";\nimport PublicIcon from \"@material-ui/icons/Public\";\nimport PhoneIcon from \"@material-ui/icons/Phone\";\nimport TransferWithinAStationIcon from \"@material-ui/icons/TransferWithinAStation\";\nimport { Country, State } from \"country-state-city\";\nimport { useAlert } from \"react-alert\";\nimport CheckoutSteps from \"../Cart/CheckoutSteps.js\";\n\nimport { CHECK_PINCODE_RESET } from \"../../constants/deliveryConstants\";\n\nimport { clearErrors, checkPincode } from \"../../actions/deliveryAction.js\";\n\nconst Shipping = ({ history }) => {\n  const dispatch = useDispatch();\n  const alert = useAlert();\n  const { shippingInfo } = useSelector((state) => state.cart);\n\n  const [address, setAddress] = useState(shippingInfo.address);\n  const [city, setCity] = useState(shippingInfo.city);\n  const [state, setState] = useState(shippingInfo.state);\n  const [country, setCountry] = useState(shippingInfo.country);\n  const [pinCode, setPinCode] = useState(shippingInfo.pinCode);\n  const [phoneNo, setPhoneNo] = useState(shippingInfo.phoneNo);\n\n  const { loading, prepaid, serviceability, error } = useSelector(\n    (state) => state.checkPincode\n  );\n  \n  const shippingSubmit = (e) => {\n    e.preventDefault();\n    \n    if (phoneNo.length < 10 || phoneNo.length > 10) {\n      alert.error(\"Phone number should be of 10 digits\");\n      return;\n    }\n\n    if (!pinCode) {\n      // Show an alert if the pinCode input is empty\n      alert.error(\"Please enter your Pin Code.\");\n      return;\n    }\n\n    // Continue with the API call logic\n    if (pinCode.length === 6) {\n      dispatch(checkPincode(pinCode));\n    } else {\n      alert.error(\"Pincode should be of 6 digits\");\n      dispatch(clearErrors());\n      dispatch({ type: CHECK_PINCODE_RESET });\n      setPinCode(\"\");\n      return;\n    }\n\n    if(!prepaid){\n      return;\n    }\n    \n    dispatch(\n      saveShippingInfo({ address, city, state, country, pinCode, phoneNo })\n    );\n\n    history.push(\"/order/confirm\");\n  };\n\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n      dispatch({ type: CHECK_PINCODE_RESET });\n      setPinCode(\"\");\n    }\n  }, [dispatch, loading, prepaid, serviceability, error, alert]);\n\n  return (\n    <Fragment>\n      <MetaData title=\"Shipping Details\" />\n      {/* static */}\n      <CheckoutSteps activeStep={0} />\n      <div className=\"shippingContainer\">\n        <div className=\"shippingBox\">\n          {/* <h2 className=\"shippingHeading\">SHIPPING DETAILS</h2> */}\n\n          <form\n            className=\"shippingForm\"\n            encType=\"multipart/form-data\"\n            onSubmit={shippingSubmit}\n          >\n            <div>\n              <HomeIcon />\n              <input\n                type=\"text\"\n                placeholder=\"Address\"\n                required\n                value={address}\n                onChange={(e) => setAddress(e.target.value)}\n              />\n            </div>\n\n            <div>\n              <LocationCityIcon />\n              <input\n                type=\"text\"\n                placeholder=\"City\"\n                required\n                value={city}\n                onChange={(e) => setCity(e.target.value)}\n              />\n            </div>\n\n            <div>\n              <PinDropIcon />\n              <input\n                type=\"number\"\n                placeholder=\"Pin Code\"\n                required\n                value={pinCode}\n                onChange={(e) => setPinCode(e.target.value)}\n              />\n            </div>\n            {/* <div className=\"checkPincode\">\n              {error && <p>{error}</p>}\n              {prepaid && serviceability.delivery_codes && (\n                <p>Prepaid service is available.</p>\n              )}\n            </div> */}\n\n            <div>\n              <PhoneIcon />\n              <input\n                type=\"number\"\n                placeholder=\"Phone Number\"\n                required\n                value={phoneNo}\n                onChange={(e) => setPhoneNo(e.target.value)}\n                size=\"10\"\n              />\n            </div>\n\n            <div>\n              <PublicIcon />\n              <select\n                required\n                value={country}\n                onChange={(e) => setCountry(e.target.value)}\n              >\n                <option value=\"\">Country</option>\n                {Country &&\n                  Country.getAllCountries().map((item) => (\n                    <option key={item.isoCode} value={item.isoCode}>\n                      {item.name}\n                    </option>\n                  ))}\n              </select>\n            </div>\n\n            {country && (\n              <div>\n                <TransferWithinAStationIcon />\n                <select\n                  required\n                  value={state}\n                  onChange={(e) => setState(e.target.value)}\n                >\n                  <option value=\"\">State</option>\n                  {State &&\n                    State.getStatesOfCountry(country).map((item) => (\n                      <option key={item.isoCode} value={item.isoCode}>\n                        {item.name}\n                      </option>\n                    ))}\n                </select>\n              </div>\n            )}\n\n            <input\n              type=\"submit\"\n              value=\"Continue\"\n              className=\"shippingBtn\"\n              // disabled={prepaid ? false : true}\n            />\n          </form>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Shipping;\n"],"sourceRoot":""}