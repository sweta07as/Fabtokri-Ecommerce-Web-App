{"version":3,"sources":["actions/orderAction.js","../node_modules/@material-ui/core/esm/Typography/Typography.js","actions/deliveryAction.js","component/Order/OrderDetails.js"],"names":["createOrder","order","dispatch","a","type","CREATE_ORDER_REQUEST","config","headers","axios","post","data","CREATE_ORDER_SUCCESS","payload","CREATE_ORDER_FAIL","response","message","myOrders","MY_ORDERS_REQUEST","get","MY_ORDERS_SUCCESS","orders","MY_ORDERS_FAIL","getOrderDetails","id","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","getAllOrders","ALL_ORDERS_REQUEST","ALL_ORDERS_SUCCESS","ALL_ORDERS_FAIL","updateOrder","UPDATE_ORDER_REQUEST","put","UPDATE_ORDER_SUCCESS","success","UPDATE_ORDER_FAIL","deleteOrder","DELETE_ORDER_REQUEST","delete","DELETE_ORDER_SUCCESS","DELETE_ORDER_FAIL","clearErrors","CLEAR_ERRORS","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","Typography","React","props","ref","_props$align","align","classes","className","_props$color","color","component","_props$display","display","_props$gutterBottom","gutterBottom","_props$noWrap","noWrap","_props$paragraph","paragraph","_props$variant","variant","_props$variantMapping","variantMapping","other","_objectWithoutProperties","Component","_extends","clsx","root","concat","capitalize","withStyles","theme","margin","typography","caption","button","overline","srOnly","position","height","width","overflow","alignLeft","textAlign","alignCenter","alignRight","alignJustify","textOverflow","whiteSpace","marginBottom","colorInherit","colorPrimary","palette","primary","main","colorSecondary","secondary","colorTextPrimary","text","colorTextSecondary","colorError","error","displayInline","displayBlock","name","checkPincode","pincode","CHECK_PINCODE_REQUEST","CHECK_PINCODE_SUCCESS","CHECK_PINCODE_FAIL","trackShipment","waybill","TRACK_SHIPMENT_REQUEST","TRACK_SHIPMENT_SUCCESS","TRACK_SHIPMENT_FAIL","OrderDetails","match","useSelector","state","orderDetails","loading","shipmentStatus","statusLocation","statusDateTime","statusType","statusCode","useDispatch","alert","useAlert","useEffect","params","orderStatus","title","_id","user","shippingInfo","phoneNo","email","address","city","pinCode","country","paymentInfo","status","totalPrice","paidAt","Date","toLocaleString","dateStyle","timeStyle","orderItems","map","item","src","image","alt","to","product","quantity","price"],"mappings":"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","file":"static/js/26.1e5077dc.chunk.js","sourcesContent":["import {\n  CREATE_ORDER_REQUEST,\n  CREATE_ORDER_FAIL,\n  CREATE_ORDER_SUCCESS,\n  MY_ORDERS_REQUEST,\n  MY_ORDERS_FAIL,\n  MY_ORDERS_SUCCESS,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_FAIL,\n  ORDER_DETAILS_SUCCESS,\n  ALL_ORDERS_REQUEST,\n  ALL_ORDERS_SUCCESS,\n  ALL_ORDERS_FAIL,\n  UPDATE_ORDER_REQUEST,\n  UPDATE_ORDER_SUCCESS,\n  UPDATE_ORDER_FAIL,\n  DELETE_ORDER_REQUEST,\n  DELETE_ORDER_SUCCESS,\n  DELETE_ORDER_FAIL,\n  CLEAR_ERRORS,\n} from \"../constants/orderConstants\";\n\nimport axios from \"axios\";\n\n//Create Order\nexport const createOrder = (order) => async (dispatch) => {\n  try {\n    dispatch({ type: CREATE_ORDER_REQUEST });\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    const { data } = await axios.post(\"/api/v1/order/new\", order, config);\n\n    dispatch({ type: CREATE_ORDER_SUCCESS, payload: data });\n\n  } catch (error) {\n    dispatch({\n      type: CREATE_ORDER_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n//My Orders\nexport const myOrders = () => async (dispatch) => {\n  try {\n    dispatch({ type: MY_ORDERS_REQUEST });\n\n    const { data } = await axios.get(\"/api/v1/orders\"); //earlier it was /orders/me\n\n    dispatch({ type: MY_ORDERS_SUCCESS, payload: data.orders });\n  } catch (error) {\n    dispatch({\n      type: MY_ORDERS_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n//Get Order Details\nexport const getOrderDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: ORDER_DETAILS_REQUEST });\n\n    const { data } = await axios.get(`/api/v1/order/${id}`);\n\n    dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data.order });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n//Get All Orders --Admin\nexport const getAllOrders = () => async (dispatch) => {\n  try {\n    dispatch({ type: ALL_ORDERS_REQUEST });\n\n    const { data } = await axios.get(\"/api/v1/admin/orders\");\n\n    dispatch({ type: ALL_ORDERS_SUCCESS, payload: data.orders });\n  } catch (error) {\n    dispatch({\n      type: ALL_ORDERS_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n//Update Order\nexport const updateOrder = (id, order) => async (dispatch) => {\n  try {\n    dispatch({ type: UPDATE_ORDER_REQUEST });\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    const { data } = await axios.put(`/api/v1/admin/order/${id}`, order, config);\n\n    dispatch({ type: UPDATE_ORDER_SUCCESS, payload: data.success });\n  } catch (error) {\n    dispatch({\n      type: UPDATE_ORDER_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n//Delete Order\nexport const deleteOrder = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: DELETE_ORDER_REQUEST });\n\n    const { data } = await axios.delete(`/api/v1/admin/order/${id}`);\n\n    dispatch({ type: DELETE_ORDER_SUCCESS, payload: data.success });\n  } catch (error) {\n    dispatch({\n      type: DELETE_ORDER_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n//Clearing Errors\nexport const clearErrors = () => async (dispatch) => {\n  dispatch({ type: CLEAR_ERRORS });\n};\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = /*#__PURE__*/React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  /**\n   * Set the text-align on the component.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * Overrides the behavior of the `variantMapping` prop.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Controls the display type\n   */\n  display: PropTypes.oneOf(['initial', 'block', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline', 'srOnly', 'inherit']),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   */\n  variantMapping: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);","import axios from 'axios';\n\nimport {\n  CHECK_PINCODE_REQUEST,\n  CHECK_PINCODE_SUCCESS,\n  CHECK_PINCODE_FAIL,\n  TRACK_SHIPMENT_REQUEST,\n  TRACK_SHIPMENT_SUCCESS,\n  TRACK_SHIPMENT_FAIL,\n  CLEAR_ERRORS,\n} from \"../constants/deliveryConstants.js\";\n\nexport const checkPincode = (pincode) => async (dispatch) => {\n  try {\n    dispatch({ type: CHECK_PINCODE_REQUEST });\n\n    // Make an API request to your backend to check the PIN code\n    const { data } = await axios.get(`/api/v1/check-pincode?pinCode=${pincode}`);\n\n    dispatch({\n      type: CHECK_PINCODE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: CHECK_PINCODE_FAIL,\n      payload: error.response ? error.response.data.message : error.message,\n    });\n  }\n};\n\nexport const trackShipment = (waybill) => async (dispatch) => {\n  try {\n    dispatch({ type: TRACK_SHIPMENT_REQUEST });\n\n    // Make an API request to your backend to check the PIN code\n    const { data } = await axios.get(\n      `/api/v1/track-shipment?waybill=${waybill}`\n    );\n\n    dispatch({\n      type: TRACK_SHIPMENT_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: TRACK_SHIPMENT_FAIL,\n      payload: error.response ? error.response.data.message : error.message,\n    });\n  }\n};\n\nexport const clearErrors = () => async (dispatch) => {\n  dispatch({ type: CLEAR_ERRORS });\n};","import React, { Fragment, useEffect } from \"react\";\nimport \"./OrderDetails.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport MetaData from \"../layout/Metadata\";\nimport { Link } from \"react-router-dom\";\nimport { Typography } from \"@material-ui/core\";\nimport { clearErrors, getOrderDetails } from \"../../actions/orderAction\";\nimport Loader from \"../layout/Loader/Loader\";\nimport { useAlert } from \"react-alert\";\n// import axios from \"axios\";\n\nimport { trackShipment } from \"../../actions/deliveryAction\";\n\n\nconst OrderDetails = ({ match }) => {\n  const { order, error, loading } = useSelector((state) => state.orderDetails);\n\n  const {\n    shipmentStatus,\n    statusLocation,\n    statusDateTime,\n    statusType,\n    statusCode,\n  } = useSelector((state) => state.trackShipment);\n\n  const dispatch = useDispatch();\n  const alert = useAlert();\n\n\n  //Check Payment Status //Phonpe API\n\n  // const [responseCode, setResponseCode] = useState(\"pending\");\n\n  // const checkPaymentStatusHandler = async (paymentInfoId) => {\n  //   try {\n  //     const {\n  //       data: { response, statusCode },\n  //     } = await axios.get(\n  //       `/api/v1/paymentverification/${paymentInfoId}` //check status api called\n  //     );\n\n  //     setResponseCode(statusCode);\n\n  //     console.log(\"orderstatus:\", order.paymentInfo.status);\n  //     console.log(\"response:\", response);\n  //     console.log(\"order:\", order);\n  //     console.log(\"statusCode:\", statusCode);\n  //     console.log(\"responseCode:\", responseCode);\n\n  //     dispatch(getOrderDetails(match.params.id));\n  //   } catch (error) {\n  //     console.error(\"Error fetching responseCode:\", error);\n  //   }\n  // };\n\n  // useEffect(() => {\n  //   checkPaymentStatusHandler();\n  // }, []);\n\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    dispatch(getOrderDetails(match.params.id));\n  }, [dispatch, alert, error, match.params.id]);\n\n  useEffect(() => {\n    // Check if the order is available and its orderStatus is not \"Processing\"\n    if (order && order.orderStatus !== \"Processing\") {\n      // Dispatch trackShipment with the waybill value\n      dispatch(trackShipment(order.waybill));\n    }\n\n    // // If order.paymentInfo.id is available, call checkPaymentStatusHandler\n    // if (\n    //   order &&\n    //   order.paymentInfo &&\n    //   order.paymentInfo.id &&\n    //   (order.paymentInfo.status === \"pending\" ||\n    //     order.paymentInfo.status === \"initiated\")\n    // ) {\n    //   checkPaymentStatusHandler(order.paymentInfo.id);\n    // }\n  }, [dispatch, order]);\n\n  return (\n    <Fragment>\n      {loading ? (\n        <Loader />\n      ) : (\n        <Fragment>\n          <MetaData title=\"Order Details\" />\n          <div className=\"orderDetailsPage\">\n            <div className=\"orderDetailsContainer\">\n              <Typography component=\"h1\">\n                Order #{order && order._id}\n              </Typography>\n              <Typography>Shipping Info</Typography>\n              <div className=\"orderDetailsContainerBox\">\n                <div>\n                  <p>Name:</p>\n                  <span>{order.user && order.user.name}</span>\n                </div>\n\n                <div>\n                  <p>Phone:</p>\n                  <span>\n                    {order.shippingInfo && order.shippingInfo.phoneNo}\n                  </span>\n                </div>\n\n                <div>\n                  <p>Email:</p>\n                  <span>{order.shippingInfo && order.user.email}</span>\n                </div>\n\n                <div>\n                  <p>Address:</p>\n                  <span>\n                    {order.shippingInfo &&\n                      `${order.shippingInfo.address}, ${order.shippingInfo.city}, ${order.shippingInfo.state}, ${order.shippingInfo.pinCode}, ${order.shippingInfo.country}`}\n                  </span>\n                </div>\n              </div>\n              <Typography>Payment</Typography>\n              <div className=\"orderDetailsContainerBox\">\n                <div>\n                  <p\n                    className={\n                      order.paymentInfo &&\n                      order.paymentInfo.status === \"succeeded\"\n                        ? \"greenColor\"\n                        : order.paymentInfo &&\n                          (order.paymentInfo.status === \"pending\" ||\n                            order.paymentInfo.status === \"initiated\")\n                        ? \"yellowColor\"\n                        : \"redColor\"\n                    }\n                  >\n                    {order.paymentInfo &&\n                    order.paymentInfo.status === \"succeeded\"\n                      ? \"PAID\"\n                      : order.paymentInfo &&\n                        (order.paymentInfo.status === \"pending\" ||\n                          order.paymentInfo.status === \"initiated\")\n                      ? \"PENDING\"\n                      : \"NOT PAID\"}\n                  </p>\n                </div>\n                <div>\n                  <p>Amount:</p>\n                  <span>{order.totalPrice && order.totalPrice}</span>\n                </div>\n                <div>\n                  <p>Transaction Id:</p>\n                  <span>{order.paymentInfo && order.paymentInfo.id}</span>\n                </div>\n                <div>\n                  <p>Transaction Status:</p>\n                  <span>{order.paymentInfo && order.paymentInfo.status}</span>\n                </div>\n                <div>\n                  <p>Date:</p>\n                  <span>\n                    {order.paidAt &&\n                      new Date(order.paidAt).toLocaleString(\"en-US\", {\n                        dateStyle: \"medium\",\n                        timeStyle: \"short\",\n                      })}\n                  </span>\n                </div>\n              </div>\n              <Typography>Order Status</Typography>\n              <div className=\"orderDetailsContainerBox\">\n                <div>\n                  <p\n                    className={\n                      order.orderStatus && order.orderStatus === \"Delivered\"\n                        ? \"greenColor\"\n                        : \"redColor\"\n                    }\n                  >\n                    {order.orderStatus && order.orderStatus}\n                  </p>\n                </div>\n              </div>\n            </div>\n            <div className=\"orderDetailsCartItems\">\n              <Typography>Order Items:</Typography>\n              <div className=\"orderDetailsCartItemsContainer\">\n                {order.orderItems &&\n                  order.orderItems.map((item) => (\n                    <div key={item.product}>\n                      <img src={item.image} alt=\"Product\" />\n                      <Link to={`/product/${item.product}`}>{item.name}</Link>\n                      <span>\n                        {item.quantity} X {item.price} ={\" \"}\n                        <b>₹{item.price * item.quantity}</b>\n                      </span>\n                    </div>\n                  ))}\n              </div>\n            </div>\n            {order.orderStatus !== \"Processing\" && (\n              <div className=\"shipmentTracking\">\n                <Typography>Your Order Updates:</Typography>\n                <div className=\"shipmentTrackContainer\">\n                  {shipmentStatus ? (\n                    <div>\n                      <p>Status: {shipmentStatus}</p>\n                      <p>Status Type: {statusLocation}</p>\n                      <p>Status DateTime: {statusDateTime}</p>\n                      <p>Status Code: {statusCode}</p>\n                      <p>Status Type: {statusType}</p>\n                    </div>\n                  ) : (\n                    <p>Loading shipment data...</p>\n                  )}\n                </div>\n              </div>\n            )}\n          </div>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nexport default OrderDetails;\n"],"sourceRoot":""}