{"version":3,"sources":["actions/cartAction.js","images/profile.png","component/Product/ReviewCard.js","component/Product/ProductDetails.js"],"names":["addItemsToCart","id","quantity","dispatch","getState","a","axios","get","data","type","ADD_TO_CART","payload","product","_id","name","price","image","images","url","stock","localStorage","setItem","JSON","stringify","cart","cartItems","removeItemsFromCart","REMOVE_CART_ITEM","saveShippingInfo","SAVE_SHIPPING_INFO","ReviewCard","review","options","value","rating","readOnly","precision","className","src","profilePng","alt","Rating","comment","ProductDetails","match","useDispatch","alert","useAlert","useSelector","state","productDetails","loading","error","newReview","success","reviewError","size","ratings","useState","setQuantity","open","setOpen","setRating","setComment","submitReviewToggle","useEffect","clearErrors","NEW_REVIEW_RESET","getSingleProduct","params","Loader","title","map","item","i","numOfReviews","class","discount","Math","round","onClick","disabled","style","whiteSpace","description","Dialog","onClose","DialogTitle","DialogContent","onChange","e","target","cols","rows","DialogActions","Button","color","myForm","FormData","set","reviews"],"mappings":"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","file":"static/js/30.3c4e8311.chunk.js","sourcesContent":["import {\n  ADD_TO_CART,\n  REMOVE_CART_ITEM,\n  SAVE_SHIPPING_INFO,\n} from \"../constants/cartConstants\";\nimport axios from \"axios\";\n\n//Add to Cart\nexport const addItemsToCart = (id, quantity) => async (dispatch, getState) => {\n  const { data } = await axios.get(`/api/v1/product/${id}`);\n\n  dispatch({\n    type: ADD_TO_CART,\n    payload: {\n      product: data.product._id,\n      name: data.product.name,\n      price: data.product.price,\n      image: data.product.images[0].url,\n      stock: data.product.stock,\n      quantity,\n    },\n  });\n  if (typeof localStorage !== 'undefined') {\n    // Access the localStorage object or execute code that depends on it\n    localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\n  }\n};\n\n//REMOVE FROM CART\nexport const removeItemsFromCart = (id) => async (dispatch, getState) => {\n  dispatch({\n    type: REMOVE_CART_ITEM,\n    payload: id,\n  });\n  if (typeof localStorage !== 'undefined') {\n    // Access the localStorage object or execute code that depends on it\n    localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\n  }\n};\n\n//SAVE SHIIPPING INFO\nexport const saveShippingInfo = (data) => async (dispatch, getState) => {\n  dispatch({\n    type: SAVE_SHIPPING_INFO,\n    payload: data,\n  });\n  if (typeof localStorage !== 'undefined') {\n    // Access the localStorage object or execute code that depends on it\n    localStorage.setItem(\"shippingInfo\", JSON.stringify(data));\n  }\n};\n\n","export default __webpack_public_path__ + \"static/media/profile.697fdcd2.png\";","import React from \"react\";\n// import ReactStars from \"react-rating-stars-component\";\nimport profilePng from \"../../images/profile.png\";\nimport { Rating } from \"@material-ui/lab\";\n\n// const ReviewCard = ({ review }) => {\n//   const options = {\n//     edit: false,\n//     color: \"rgba(20,20,20,0.1)\",\n//     activeColor: \"rgb(128, 0, 57)\",\n//     size: window.innerWidth < 600 ? 20 : 25,\n//     value: review.rating,\n//     isHalf: true,\n//   };\n\n\nconst ReviewCard = ({ review }) => {\n const options = {\n   value: review.rating,\n   readOnly: true,\n   precision: 0.5,\n };\n\n  return (\n    <div className=\"reviewCard\">\n      <img src={profilePng} alt=\"User\" />\n      <p>{review.name}</p>\n      <Rating {...options} />\n      <span className=\"reviewCardComment\"> {review.comment} </span>\n    </div>\n  );\n};\n\nexport default ReviewCard;\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport Carousel from \"react-material-ui-carousel\";\nimport \"./ProductDetails.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  clearErrors,\n  getSingleProduct,\n  newReview,\n} from \"../../actions/productAction\";\nimport ReviewCard from \"./ReviewCard.js\";\nimport Loader from \"../layout/Loader/Loader\";\nimport { useAlert } from \"react-alert\";\nimport MetaData from \"../layout/Metadata\";\nimport { addItemsToCart } from \"../../actions/cartAction\";\nimport {\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Button,\n} from \"@material-ui/core\";\n\nimport { Rating } from \"@material-ui/lab\";\nimport { NEW_REVIEW_RESET } from \"../../constants/productConstants\";\n\nconst ProductDetails = ({ match }) => {\n  const dispatch = useDispatch();\n  const alert = useAlert();\n\n  const { product, loading, error } = useSelector(\n    (state) => state.productDetails\n  );\n\n  const { success, error: reviewError } = useSelector(\n    (state) => state.newReview\n  );\n\n  const options = {\n    // edit: false,\n    // color: \"rgba(20,20,20,0.1)\",\n    // activeColor: \"rgb(128, 0, 57)\",\n    // size: window.innerWidth < 600 ? 20 : 25,\n    size: \"large\",\n    value: product.ratings,\n    readOnly: true,\n    precision: 0.5,\n  };\n\n  const [quantity, setQuantity] = useState(1);\n  const [open, setOpen] = useState(false);\n  const [rating, setRating] = useState(0);\n  const [comment, setComment] = useState(\"\");\n\n  const increaseQuantity = () => {\n    if (product.stock <= quantity) return;\n    const qty = quantity + 1;\n    setQuantity(qty);\n  };\n\n  const decreaseQuantity = () => {\n    if (quantity < 1) return; //changed\n    const qty = quantity - 1;\n    setQuantity(qty);\n  };\n\n  const addToCartHandler = () => {\n    dispatch(addItemsToCart(match.params.id, quantity));\n    alert.success(\"Item Added To Cart\");\n  };\n\n  const submitReviewToggle = () => {\n    open ? setOpen(false) : setOpen(true);\n  };\n\n  const reviewSubmitHandler = () => {\n    const myForm = new FormData();\n\n    myForm.set(\"rating\", rating);\n    myForm.set(\"comment\", comment);\n    myForm.set(\"productId\", match.params.id);\n\n    dispatch(newReview(myForm));\n\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (reviewError) {\n      alert.error(reviewError);\n      dispatch(clearErrors());\n    }\n\n    if (success) {\n      alert.success(\"Review Submitted Successfully\");\n      dispatch({type: NEW_REVIEW_RESET})\n    }\n\n    dispatch(getSingleProduct(match.params.id));\n  }, [dispatch, match.params.id, error, alert, reviewError, success]);\n\n  return (\n    <Fragment>\n      {loading ? (\n        <Loader />\n      ) : (\n        <Fragment>\n          <MetaData title={`${product.name} FABTOKRI`} />\n          <div className=\"ProductDetails\">\n            <div>\n              <Carousel>\n                {product.images &&\n                  product.images.map((item, i) => (\n                    <img\n                      className=\"CarouselImage\"\n                      key={item.url}\n                      src={item.url}\n                      alt={`${i} Slide`}\n                    />\n                  ))}\n              </Carousel>\n            </div>\n\n            <div>\n              <div className=\"detailsBlock-1\">\n                <h2> {product.name} </h2>\n                {/* <p>Product # {product._id} </p> */}\n              </div>\n              <div className=\"detailsBlock-2\">\n                <Rating {...options} />\n                <span className=\"detailsBlock-2-span\">\n                  ({product.numOfReviews} Reviews){\" \"}\n                </span>\n              </div>\n          \n              <div className=\"detailsBlock-3\">\n                <div class=\"priceInfo\">\n                  <h1>{`₹${product.price}`}</h1>\n                  {product.discount > 0 && (\n                    <>\n                      <h3>{`₹${Math.round(\n                        product.price / (1 - product.discount / 100)\n                      )}`}</h3>\n                      <h2 className=\"priceInfoDiscount\">{`(${product.discount}% OFF)`}</h2>\n                    </>\n                  )}\n                </div>\n                <div className=\"detailsBlock-3-1\">\n                  <div className=\"detailsBlock-3-1-1\">\n                    <button onClick={decreaseQuantity}>-</button>\n                    <input readOnly value={quantity} type=\"number\" />\n                    <button onClick={increaseQuantity}>+</button>\n                  </div>\n                  <button\n                    disabled={product.stock < 1 ? true : false}\n                    onClick={addToCartHandler}\n                  >\n                    Add to Cart\n                  </button>\n                </div>\n                <p>\n                  Status:\n                  <span\n                    className={product.stock < 1 ? \"redColor\" : \"greenColor\"}\n                  >\n                    {/* used small s in stock */}\n                    {product.stock < 1 ? \" Out Of Stock \" : \" Available \"}\n                  </span>\n                </p>\n              </div>\n              <div className=\"detailsBlock-4\">\n                Description:{\" \"}\n                <div\n                  style={{ whiteSpace: \"pre-line\" }}\n                  className=\"productDescription\"\n                >\n                  {product.description}\n                </div>\n              </div>\n\n              <button onClick={submitReviewToggle} className=\"submitReview\">\n                Submit Review\n              </button>\n            </div>\n          </div>\n\n          <h3 className=\"reviewsHeading\">REVIEWS</h3>\n\n          <Dialog\n            aria-labelledby=\"simple-dialog-title\"\n            open={open}\n            onClose={submitReviewToggle}\n          >\n            <DialogTitle>Submit Review</DialogTitle>\n            <DialogContent className=\"submitDialog\">\n              <Rating\n                onChange={(e) => setRating(e.target.value)}\n                value={rating}\n                size=\"large\"\n              />\n\n              <textarea\n                className=\"submitDialogTextArea\"\n                cols=\"30\"\n                rows=\"5\"\n                value={comment}\n                onChange={(e) => setComment(e.target.value)}\n              ></textarea>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={submitReviewToggle} color=\"secondary\">\n                Cancel\n              </Button>\n              <Button onClick={reviewSubmitHandler} color=\"primary\">\n                Submit\n              </Button>\n            </DialogActions>\n          </Dialog>\n\n          {product.reviews && product.reviews[0] ? (\n            <div className=\"reviews\">\n              {product.reviews &&\n                product.reviews.map((review) => <ReviewCard review={review} />)}\n            </div>\n          ) : (\n            <p className=\"noReviews\">No Reviews Yet</p>\n          )}\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nexport default ProductDetails;\n"],"sourceRoot":""}